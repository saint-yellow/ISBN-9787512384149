@using WindowsOnly.Extensions

@model WindowsOnly.ViewModels.AuthorViewModel

@{
    bool isCreating = Model.Id == 0;
    ViewBag.Title = isCreating ? "Create an Author" : "Edit an Author";
    Layout = null;
}


<div id="form-modal" class="modal fade">
    <div class="dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4>@ViewBag.Title</h4>
            </div>
            <div class="modal-content">
                <div data-bind="visible: !saveCompleted()">
                    @using (Html.BeginForm(isCreating ? "Create" : "Edit", "Authors", FormMethod.Post, new { data_bind = "submit: validateAndSave" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Author</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", data_bind = "value: author.firstName" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", data_bind = "value: author.lastName" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Biography, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { @class = "form-control", data_bind = "value: author.biography" } })
                                    @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10" data-bind="visible: !sending()">
                                    <input type="submit" value="@if (isCreating) { @Html.Raw("Create") } else { @Html.Raw("Update") } " class="btn btn-default" />
                                </div>



                                <div class="progress" data-bind="visible: sending">
                                    <div class="progress-bar progress-bar-info progress-bar-striped active"
                                         role="progressbar"
                                         aria-valuenow="100"
                                         aria-valuemin="0"
                                         aria-valuemax="100"
                                         style="width: 100%">
                                        <span class="sr-only"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer"></div>
        </div>
    </div>
</div>

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render(
        "~/bundles/jqueryval", 
        "~/Scripts/ViewModels/AuthorFormViewModel.js"
    );

    <script>
        var viewModel = new AuthorFormViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);
    </script>
}